<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Pietro F. Maggi</title>
    <link>https://pietromaggi.com/topics/android/</link>
    <description>Recent content in Android on Pietro F. Maggi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>pfm@pietromaggi.com (Pietro F. Maggi)</managingEditor>
    <webMaster>pfm@pietromaggi.com (Pietro F. Maggi)</webMaster>
    <copyright>(c) 2013-2019 Pietro F. Maggi</copyright>
    <lastBuildDate>Thu, 14 Jan 2016 23:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://pietromaggi.com/topics/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Secondary External Storage in Android KitKat - Part 1</title>
      <link>https://pietromaggi.com/2016/01/14/secondary-external-storage-in-android-kitkat-part-1/</link>
      <pubDate>Thu, 14 Jan 2016 23:00:00 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2016/01/14/secondary-external-storage-in-android-kitkat-part-1/</guid>
      <description>First technical post for 2016. Finally!
To kick-start 2016 I&amp;rsquo;ve chosen a topic that is more and more relevant in our market: The changes introduced by Google in Android v4.4 KitKat, regarding the secondary storage (the SDCard).
I&amp;rsquo;ve already talked about this in my AppForum 2015 talk last October in London1, but I want to add some extra info and rationales here.
A bit of background Android&amp;rsquo;s purpose is to establish an open platform for developers to build innovative apps.</description>
    </item>
    
    <item>
      <title>Finding the SDCard Path on Android devices</title>
      <link>https://pietromaggi.com/2014/10/19/finding-the-sdcard-path-on-android-devices/</link>
      <pubDate>Sun, 19 Oct 2014 20:55:18 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2014/10/19/finding-the-sdcard-path-on-android-devices/</guid>
      <description>With Motorola Solutions we&amp;rsquo;re busy finishing the first round of Android Developer&amp;rsquo;s Kitchens around Europe. Just in time to prepare for the Enterprise App Forum in Brussels!.
The nice things of these events is the interaction with our partners and theirs real live problem!
Last week I got an interesting question regarding our TC55:
How can I programmatically get the path for the SDCard on the TC55?
That&amp;rsquo;s a good question; usually you don&amp;rsquo;t want to insert in your code the dependency to an hard coded path!</description>
    </item>
    
    <item>
      <title>Getting device info from MSI Android devices</title>
      <link>https://pietromaggi.com/2014/09/02/getting-device-info-from-msi-android-devices/</link>
      <pubDate>Tue, 02 Sep 2014 11:56:38 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2014/09/02/getting-device-info-from-msi-android-devices/</guid>
      <description>The good old ways! On Symbol/MSI Windows Mobile devices, we where providing some APIs in the EMDK to get additional information. Looking into the Resource Coordinator is possible to find APIs like:
 RCM_GetESN() - retrieves the device electronic serial number RCM_GetUniqueUnitId() - retrieves the unique unit identification number RCM_GetVersion() - retrieves version information etc&amp;hellip;  &amp;hellip;and we don&amp;rsquo;t have anything like this in the Android EMDK. WHY?
Simply because the functionality is already included in the standard Android SDK.</description>
    </item>
    
    <item>
      <title>Diving into Android source code</title>
      <link>https://pietromaggi.com/2014/01/02/diving-into-android-source-code/</link>
      <pubDate>Thu, 02 Jan 2014 14:34:27 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2014/01/02/diving-into-android-source-code/</guid>
      <description>Why dive into Android code? When you&amp;rsquo;ve to write applications for Android, you&amp;rsquo;re targeting a giant moving API surface, sometimes you can be surprised of some different behavior in different Android versions or with an API call that is not well documented, so having the option to delve into Android Source Code is a great opportunity.
A lot of things can be written on how to do this, there&amp;rsquo;s some documentation available on AOSP website, however I think that the best starting point is a video tutorial by NewCircle&amp;rsquo;s Instructor Dave Smith on this very topic:</description>
    </item>
    
  </channel>
</rss>