<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xamarin.forms on Pietro F. Maggi</title>
    <link>https://pietromaggi.com/tags/xamarin.forms/</link>
    <description>Recent content in Xamarin.forms on Pietro F. Maggi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>pfm@pietromaggi.com (Pietro F. Maggi)</managingEditor>
    <webMaster>pfm@pietromaggi.com (Pietro F. Maggi)</webMaster>
    <copyright>(c) 2013-2018 Pietro F. Maggi</copyright>
    <lastBuildDate>Wed, 11 Jul 2018 09:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://pietromaggi.com/tags/xamarin.forms/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>(Xamarin.Forms &#43; FreshMVVM &#43; DataWedge) take 2</title>
      <link>https://pietromaggi.com/2018/07/11/xamarin.forms---freshmvvm---datawedge-take-2/</link>
      <pubDate>Wed, 11 Jul 2018 09:00:00 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2018/07/11/xamarin.forms---freshmvvm---datawedge-take-2/</guid>
      <description>Note: the accompanying code is available on GitHub.
We saw in the last post how to add barcode scanning functionalities to the &amp;laquo;Inventory&amp;raquo; sample application, using DataWedge.
Today we&amp;rsquo;re going to review that code and refactor it &amp;laquo;just a bit&amp;raquo;. The goal is to make it a bit more modular, adding some flexibility to how we manage the barcode. In particular we want to have these features in our app:</description>
    </item>
    
    <item>
      <title>Xamarin.Forms &#43; FreshMVVM &#43; DataWedge = ðŸ’–</title>
      <link>https://pietromaggi.com/2018/07/07/xamarin.forms---freshmvvm---datawedge--/</link>
      <pubDate>Sat, 07 Jul 2018 09:00:00 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2018/07/07/xamarin.forms---freshmvvm---datawedge--/</guid>
      <description>Note: the accompanying code is available on GitHub.
The topic for today is how to add barcode scanning functionalities to the &amp;laquo;Inventory&amp;raquo; sample application we built in the previous post about Xamarin.Forms and FreshMVVM.
To integrate barcode scanning functionalities we&amp;rsquo;ve different options:
 Do Nothing - Barcode scanning in enabled by default simulating keyboard entry: the application receives the data in the selected input field. Integrate Barcode scanning API from Zebra&amp;rsquo;s EMDK for Xamarin - This is time consuming and add a dependency to our project.</description>
    </item>
    
    <item>
      <title>Xamarin.Forms &#43; FreshMVVM for enterprise applications</title>
      <link>https://pietromaggi.com/2018/07/04/xamarin.forms---freshmvvm-for-enterprise-applications/</link>
      <pubDate>Wed, 04 Jul 2018 09:00:00 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2018/07/04/xamarin.forms---freshmvvm-for-enterprise-applications/</guid>
      <description>Note: the accompanying code is available on GitHub.
As I wrote in my previous post:
 Summer is the perfect time for some cleanup, and I&amp;rsquo;ve some older content laying around my laptop that is about time I publish! I&amp;rsquo;m planning to cover some long-standing argument that I&amp;rsquo;ve touched over the last few years as Zebra&amp;rsquo;s EMEA Software Consultant.
 I&amp;rsquo;ve been involved in multiple meetings and planning with Zebra&amp;rsquo;s partners and end-users explaining what was the best option to integrate barcode scanning functionality in a Xamarin Forms application.</description>
    </item>
    
  </channel>
</rss>