<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Pietro F. Maggi</title>
    <link>https://pietromaggi.com/tags/android/</link>
    <description>Recent content in Android on Pietro F. Maggi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>pfm@pietromaggi.com (Pietro F. Maggi)</managingEditor>
    <webMaster>pfm@pietromaggi.com (Pietro F. Maggi)</webMaster>
    <copyright>(c) 2013-2019 Pietro F. Maggi</copyright>
    <lastBuildDate>Thu, 12 Jul 2018 18:00:48 +0200</lastBuildDate>
    
	<atom:link href="https://pietromaggi.com/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Enterprise Browser - Using the Android Headset as a Barcode Trigger</title>
      <link>https://pietromaggi.com/2018/07/12/enterprise-browser-using-the-android-headset-as-a-barcode-trigger/</link>
      <pubDate>Thu, 12 Jul 2018 18:00:48 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2018/07/12/enterprise-browser-using-the-android-headset-as-a-barcode-trigger/</guid>
      <description>What if&amp;hellip;
you want to use a Zebra&amp;rsquo;s Android device mounted on an arm-mount and you want to control the barcode scanner with a wired button?
WT6000 is the obvious answer!
But if your customer has already chosen the TC51 for other activities, we can help them using the headset connector.
The Android headset connectors Before Apple decided that we don&amp;rsquo;t need anymore the 3.5mm headset connector on our phones, people started to look into it as a standard input interface for all the devices.</description>
    </item>
    
    <item>
      <title>(Xamarin.Forms &#43; FreshMVVM &#43; DataWedge) take 2</title>
      <link>https://pietromaggi.com/2018/07/11/xamarin.forms-freshmvvm-datawedge-take-2/</link>
      <pubDate>Wed, 11 Jul 2018 09:00:00 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2018/07/11/xamarin.forms-freshmvvm-datawedge-take-2/</guid>
      <description>Note: the accompanying code is available on GitHub.
We saw in the last post how to add barcode scanning functionalities to the &amp;laquo;Inventory&amp;raquo; sample application, using DataWedge.
Today we&amp;rsquo;re going to review that code and refactor it &amp;laquo;just a bit&amp;raquo;. The goal is to make it a bit more modular, adding some flexibility to how we manage the barcode. In particular we want to have these features in our app:</description>
    </item>
    
    <item>
      <title>Xamarin.Forms &#43; FreshMVVM &#43; DataWedge = ðŸ’–</title>
      <link>https://pietromaggi.com/2018/07/07/xamarin.forms-freshmvvm-datawedge/</link>
      <pubDate>Sat, 07 Jul 2018 09:00:00 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2018/07/07/xamarin.forms-freshmvvm-datawedge/</guid>
      <description>Note: the accompanying code is available on GitHub.
The topic for today is how to add barcode scanning functionalities to the &amp;laquo;Inventory&amp;raquo; sample application we built in the previous post about Xamarin.Forms and FreshMVVM.
To integrate barcode scanning functionalities we&amp;rsquo;ve different options:
 Do Nothing - Barcode scanning in enabled by default simulating keyboard entry: the application receives the data in the selected input field. Integrate Barcode scanning API from Zebra&amp;rsquo;s EMDK for Xamarin - This is time consuming and add a dependency to our project.</description>
    </item>
    
    <item>
      <title>Xamarin.Forms &#43; FreshMVVM for enterprise applications</title>
      <link>https://pietromaggi.com/2018/07/04/xamarin.forms-freshmvvm-for-enterprise-applications/</link>
      <pubDate>Wed, 04 Jul 2018 09:00:00 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2018/07/04/xamarin.forms-freshmvvm-for-enterprise-applications/</guid>
      <description>Note: the accompanying code is available on GitHub.
As I wrote in my previous post:
 Summer is the perfect time for some cleanup, and I&amp;rsquo;ve some older content laying around my laptop that is about time I publish! I&amp;rsquo;m planning to cover some long-standing argument that I&amp;rsquo;ve touched over the last few years as Zebra&amp;rsquo;s EMEA Software Consultant.
 I&amp;rsquo;ve been involved in multiple meetings and planning with Zebra&amp;rsquo;s partners and end-users explaining what was the best option to integrate barcode scanning functionality in a Xamarin Forms application.</description>
    </item>
    
    <item>
      <title>Zebra&#39;s EMDK Async Profile Manager APIs</title>
      <link>https://pietromaggi.com/2018/06/26/zebras-emdk-async-profile-manager-apis/</link>
      <pubDate>Tue, 26 Jun 2018 09:00:00 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2018/06/26/zebras-emdk-async-profile-manager-apis/</guid>
      <description>Note: the accompanying code is available on github.
Summer is the perfect time for some cleanup, and I&amp;rsquo;ve some older content laying around my laptop that is about time I publish!
I&amp;rsquo;m planning to cover some long-standing argument that I&amp;rsquo;ve touched over the last few years as Zebra&amp;rsquo;s EMEA Software Consultant.
Years ago we had some posts on the EMDK discussion forum about some instability seen if an application tries to apply a profile just after device boot.</description>
    </item>
    
    <item>
      <title>Android Auto testing</title>
      <link>https://pietromaggi.com/2017/10/31/android-auto-testing/</link>
      <pubDate>Tue, 31 Oct 2017 21:00:00 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2017/10/31/android-auto-testing/</guid>
      <description>Android Auto? Why? This summer I bought a new car and it came with a nice 8&amp;rdquo; touch panel that supports Android Auto and Apple Car.
It even came with seven seats and a nice engine, and that was way more important than having an additional screen&amp;hellip; but, it&amp;rsquo;s there, and I started to make good use of it.
Playing with Android Auto is a bit of a hit and miss.</description>
    </item>
    
    <item>
      <title>Tips on how to demo Android devices</title>
      <link>https://pietromaggi.com/2017/10/13/tips-on-how-to-demo-android-devices/</link>
      <pubDate>Fri, 13 Oct 2017 17:20:00 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2017/10/13/tips-on-how-to-demo-android-devices/</guid>
      <description>Have you ever presented a new Android device to a tech crowd trying to explain some feature?
it happens to me quite a lot and over time I built my little bag of tricks on how to do it.
1. Use Vysor to show my device on the screen Vysor is my go-to solution for showing my device screen on the PC during demo. The only requirement in this case is to have adb enabled on your device and having a working adb on your PC/mac.</description>
    </item>
    
    <item>
      <title>droidcon Berlin 2017 Day 0 - the best Android community event!</title>
      <link>https://pietromaggi.com/2017/09/10/droidcon-berlin-2017-day-0-the-best-android-community-event/</link>
      <pubDate>Sun, 10 Sep 2017 21:00:00 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2017/09/10/droidcon-berlin-2017-day-0-the-best-android-community-event/</guid>
      <description>Another year, another droidcon Berlin.
This year I decided to took some detailed notes. This is the report for the first day, Sunday September 3rd, I&amp;rsquo;ll add a couple of other posts for the main conference days.
Day 0 - Sunday September 3rd The event this year started on Sunday September 3rd with a barcamp, and a panel on data persistency.
Being there for setting up the booth in the morning I pitched a talk about &amp;laquo;Barcode Scanning on Android&amp;raquo; in Android and got accepted straight away&amp;hellip; it&amp;rsquo;s incredible the interest in this technology that was invented the same year I was born, 1970&amp;hellip; is this a coincidence?</description>
    </item>
    
    <item>
      <title>Using Android `sdk.dir` property to locate EMDK&#39;s jar Library.</title>
      <link>https://pietromaggi.com/2017/08/08/using-android-sdk.dir-property-to-locate-emdks-jar-library./</link>
      <pubDate>Tue, 08 Aug 2017 17:20:00 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2017/08/08/using-android-sdk.dir-property-to-locate-emdks-jar-library./</guid>
      <description>Note this post has been published on Zebra developer portal, if you&amp;rsquo;ve any comment, probably best to post them over there.
Working in Android Studio you can notice that every project contains a local.properties file with at least a couple of properties containing the path for Android SDK and Android NDK.
Android Studio populates this information when it creates the project based on the ANDROID_HOME environment variable. If this variable is not present in your system Android Studio will find the correct path in other ways, but having ANDROID_HOME setup correctly is a really good idea, see the note at the end of this short post.</description>
    </item>
    
    <item>
      <title>Toggling MC18 Navigation (and Status) Bar visible state</title>
      <link>https://pietromaggi.com/2016/10/30/toggling-mc18-navigation-and-status-bar-visible-state/</link>
      <pubDate>Sun, 30 Oct 2016 11:00:00 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2016/10/30/toggling-mc18-navigation-and-status-bar-visible-state/</guid>
      <description>MC18 is the only Zebra Android mobile computer (at least till now) that uses a Navigation bar instead of phisycal buttons for the back and home. This is the first device where it makes sense to use Android immersive mode!
The problem with the standard immersive mode is that swiping from the bottom or the top of the screen re-enable both Navigation and Status bar. It&amp;rsquo;s not really intended to be a kiosk mode&amp;hellip; is just to have a full screen capability.</description>
    </item>
    
    <item>
      <title>Enterprise Browser and DataWedge on Android - friends at the end</title>
      <link>https://pietromaggi.com/2016/10/29/enterprise-browser-and-datawedge-on-android-friends-at-the-end/</link>
      <pubDate>Sat, 29 Oct 2016 11:00:00 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2016/10/29/enterprise-browser-and-datawedge-on-android-friends-at-the-end/</guid>
      <description>During Enterprise Browser hands-on lab, I got some enquiry about using other MobilityDNA utilities together with EB; in particular how to integrate SwipeAssist and Simulscan. These utilities can be integrated, with some heavy lifting, and accepting some constraints.
Some background The current scanner framework implementation on our Android devices make available a single scanner object that provides full Scanner control. As always &amp;hellip;&amp;laquo;with great power comes great responsibility&amp;raquo;: an application using the scanner object from the Barcode API, is required to release it when it&amp;rsquo;s going in the background (usually you do this handling in the onPause() callback in your native application).</description>
    </item>
    
    <item>
      <title>Disabling Home Button on Zebra Android devices</title>
      <link>https://pietromaggi.com/2016/08/01/disabling-home-button-on-zebra-android-devices/</link>
      <pubDate>Mon, 01 Aug 2016 17:00:00 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2016/08/01/disabling-home-button-on-zebra-android-devices/</guid>
      <description>Intro I presented in the past a method to disable the Home Button on Zebra&amp;rsquo;s MC40 Android device, using a custom intent1. After having published it, I got some enquiries, about having the same behaviour on other Zebra&amp;rsquo;s devices. Well, it turns out that there&amp;rsquo;s now a &amp;laquo;standard&amp;raquo; way to do this in Zebra&amp;rsquo;s Mx extension using the UI Manager profile. This post is going to show how to implement a simple application that can disable the Home Button on all Zebra&amp;rsquo;s devices that have Mx v4.</description>
    </item>
    
    <item>
      <title>Managing Display AutoRotation from StageNow</title>
      <link>https://pietromaggi.com/2016/06/07/managing-display-autorotation-from-stagenow/</link>
      <pubDate>Tue, 07 Jun 2016 20:00:00 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2016/06/07/managing-display-autorotation-from-stagenow/</guid>
      <description>Edit: Changes in API level 23 and newer make impossible for normal application to modify the autorotate setting The application presented in this blog uses the android.permission.WRITE_SETTINGS that, starting from Android v6.0 Marshmallow (API level 23), requires the application to be system or signed to be able to run without user intervention.
There&amp;rsquo;s a workaround that can be used targeting API level 22. In this way the application can still use the old permission model and it can write into the settings.</description>
    </item>
    
    <item>
      <title>Disabling MC40 Home Button with a custom intent</title>
      <link>https://pietromaggi.com/2016/01/18/disabling-mc40-home-button-with-a-custom-intent/</link>
      <pubDate>Mon, 18 Jan 2016 09:00:00 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2016/01/18/disabling-mc40-home-button-with-a-custom-intent/</guid>
      <description>Note: _I&amp;rsquo;ve published another post that explain how to disable the Home Button on all the Zebra&amp;rsquo;s Android devices that are supported by Mx v4.3+._
Intro Zebra Technologies&amp;rsquo; devices are purpose built to be single use devices. Having an OS like Android nowadays provides a lot of flexibility&amp;hellip; sometimes a bit too much.
With this idea in mind, the Android version used on these devices sometimes provide some nice surprise, like an Intent to disable the omnipresent Android&amp;rsquo;s Home button.</description>
    </item>
    
    <item>
      <title>Secondary External Storage in Android KitKat - Part 1</title>
      <link>https://pietromaggi.com/2016/01/14/secondary-external-storage-in-android-kitkat-part-1/</link>
      <pubDate>Thu, 14 Jan 2016 23:00:00 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2016/01/14/secondary-external-storage-in-android-kitkat-part-1/</guid>
      <description>First technical post for 2016. Finally!
To kick-start 2016 I&amp;rsquo;ve chosen a topic that is more and more relevant in our market: The changes introduced by Google in Android v4.4 KitKat, regarding the secondary storage (the SDCard).
I&amp;rsquo;ve already talked about this in my AppForum 2015 talk last October in London1, but I want to add some extra info and rationales here.
A bit of background Android&amp;rsquo;s purpose is to establish an open platform for developers to build innovative apps.</description>
    </item>
    
    <item>
      <title>Building Zebra&#39;s EMDK project using SDK Platform 23</title>
      <link>https://pietromaggi.com/2015/11/25/building-zebras-emdk-project-using-sdk-platform-23/</link>
      <pubDate>Wed, 25 Nov 2015 09:54:55 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2015/11/25/building-zebras-emdk-project-using-sdk-platform-23/</guid>
      <description>Note: EMDK 4.0 is now documenting this method to add com.symbol.emdk.jar as a dependency There&amp;rsquo;s a recurring question coming to me and to Launchpad&amp;rsquo;s forums lately:
How can I compile my Android app, using Zebra&amp;rsquo;s EMDK, if I need the latest support library?
Some background With the Android tools moving super-fast (Android studio v1.0 launched at the beginning of 2015, the latest stable release is v1.4.1, we already have v1.</description>
    </item>
    
    <item>
      <title>Android Back Button and Enterprise Browser</title>
      <link>https://pietromaggi.com/2015/09/25/android-back-button-and-enterprise-browser/</link>
      <pubDate>Fri, 25 Sep 2015 11:33:11 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2015/09/25/android-back-button-and-enterprise-browser/</guid>
      <description>Edit Enteprise Browser v1.3 introduced a change that requires to enable FunctionKeysCapturable to be able to use the KeyCapture API.
To do this you need to update your Config.xml with:
&amp;lt;FunctionKeysCapturable value=&amp;quot;1&amp;quot;/&amp;gt;  Enterprise Browser Enterprise Browser is Zebra Technologies&amp;rsquo; Industrial Browser built for our Rugged Devices, we support most of our Windows Mobile/Windows CE devices and Android devices.
This product is usually used with existing web application that cannot be updated/modified moving from one device to another.</description>
    </item>
    
    <item>
      <title>Finding the SDCard Path on Android devices</title>
      <link>https://pietromaggi.com/2014/10/19/finding-the-sdcard-path-on-android-devices/</link>
      <pubDate>Sun, 19 Oct 2014 20:55:18 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2014/10/19/finding-the-sdcard-path-on-android-devices/</guid>
      <description>With Motorola Solutions we&amp;rsquo;re busy finishing the first round of Android Developer&amp;rsquo;s Kitchens around Europe. Just in time to prepare for the Enterprise App Forum in Brussels!.
The nice things of these events is the interaction with our partners and theirs real live problem!
Last week I got an interesting question regarding our TC55:
How can I programmatically get the path for the SDCard on the TC55?
That&amp;rsquo;s a good question; usually you don&amp;rsquo;t want to insert in your code the dependency to an hard coded path!</description>
    </item>
    
    <item>
      <title>Getting device info from MSI Android devices</title>
      <link>https://pietromaggi.com/2014/09/02/getting-device-info-from-msi-android-devices/</link>
      <pubDate>Tue, 02 Sep 2014 11:56:38 +0200</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2014/09/02/getting-device-info-from-msi-android-devices/</guid>
      <description>The good old ways! On Symbol/MSI Windows Mobile devices, we where providing some APIs in the EMDK to get additional information. Looking into the Resource Coordinator is possible to find APIs like:
 RCM_GetESN() - retrieves the device electronic serial number RCM_GetUniqueUnitId() - retrieves the unique unit identification number RCM_GetVersion() - retrieves version information etc&amp;hellip;  &amp;hellip;and we don&amp;rsquo;t have anything like this in the Android EMDK. WHY?
Simply because the functionality is already included in the standard Android SDK.</description>
    </item>
    
    <item>
      <title>Diving into Android source code</title>
      <link>https://pietromaggi.com/2014/01/02/diving-into-android-source-code/</link>
      <pubDate>Thu, 02 Jan 2014 14:34:27 +0100</pubDate>
      <author>pfm@pietromaggi.com (Pietro F. Maggi)</author>
      <guid>https://pietromaggi.com/2014/01/02/diving-into-android-source-code/</guid>
      <description>Why dive into Android code? When you&amp;rsquo;ve to write applications for Android, you&amp;rsquo;re targeting a giant moving API surface, sometimes you can be surprised of some different behavior in different Android versions or with an API call that is not well documented, so having the option to delve into Android Source Code is a great opportunity.
A lot of things can be written on how to do this, there&amp;rsquo;s some documentation available on AOSP website, however I think that the best starting point is a video tutorial by NewCircle&amp;rsquo;s Instructor Dave Smith on this very topic:</description>
    </item>
    
  </channel>
</rss>